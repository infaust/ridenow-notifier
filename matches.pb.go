// Code generated by protoc-gen-go.
// source: matches.proto
// DO NOT EDIT!

package notifier

import proto "github.com/golang/protobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Match struct {
	User             *Match_User     `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Location         *Match_Location `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	WaveHeightM      *float64        `protobuf:"fixed64,3,opt,name=wave_height_m" json:"wave_height_m,omitempty"`
	Time             *int64          `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Match) Reset()         { *m = Match{} }
func (m *Match) String() string { return proto.CompactTextString(m) }
func (*Match) ProtoMessage()    {}

func (m *Match) GetUser() *Match_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Match) GetLocation() *Match_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Match) GetWaveHeightM() float64 {
	if m != nil && m.WaveHeightM != nil {
		return *m.WaveHeightM
	}
	return 0
}

func (m *Match) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type Match_User struct {
	Id               *int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Username         *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Name             *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Surname          *string `protobuf:"bytes,4,opt,name=surname" json:"surname,omitempty"`
	Email            *string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Match_User) Reset()         { *m = Match_User{} }
func (m *Match_User) String() string { return proto.CompactTextString(m) }
func (*Match_User) ProtoMessage()    {}

func (m *Match_User) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Match_User) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *Match_User) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Match_User) GetSurname() string {
	if m != nil && m.Surname != nil {
		return *m.Surname
	}
	return ""
}

func (m *Match_User) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

type Match_Location struct {
	Id               *int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Match_Location) Reset()         { *m = Match_Location{} }
func (m *Match_Location) String() string { return proto.CompactTextString(m) }
func (*Match_Location) ProtoMessage()    {}

func (m *Match_Location) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Match_Location) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func init() {
}
